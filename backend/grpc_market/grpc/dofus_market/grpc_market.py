# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: grpc_market.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
import grpclib

from .google import protobuf


@dataclass
class IngredientDestroyRequest(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass
class IngredientListRequest(betterproto.Message):
    pass


@dataclass
class IngredientListResponse(betterproto.Message):
    results: List["IngredientResponse"] = betterproto.message_field(1)


@dataclass
class IngredientPartialUpdateRequest(betterproto.Message):
    name: str = betterproto.string_field(1)
    partial_update_fields: List[str] = betterproto.string_field(2)
    price: int = betterproto.int32_field(3)


@dataclass
class IngredientRequest(betterproto.Message):
    name: str = betterproto.string_field(1)
    price: int = betterproto.int32_field(2)


@dataclass
class IngredientResponse(betterproto.Message):
    name: str = betterproto.string_field(1)
    price: int = betterproto.int32_field(2)


@dataclass
class IngredientRetrieveRequest(betterproto.Message):
    name: str = betterproto.string_field(1)


class IngredientControllerStub(betterproto.ServiceStub):
    async def create(self, *, name: str = "", price: int = 0) -> IngredientResponse:
        request = IngredientRequest()
        request.name = name
        request.price = price

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/Create",
            request,
            IngredientResponse,
        )

    async def destroy(self, *, name: str = "") -> protobuf.Empty:
        request = IngredientDestroyRequest()
        request.name = name

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/Destroy",
            request,
            protobuf.Empty,
        )

    async def list(self) -> IngredientListResponse:
        request = IngredientListRequest()

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/List",
            request,
            IngredientListResponse,
        )

    async def partial_update(
        self, *, name: str = "", partial_update_fields: List[str] = [], price: int = 0
    ) -> IngredientResponse:
        request = IngredientPartialUpdateRequest()
        request.name = name
        request.partial_update_fields = partial_update_fields
        request.price = price

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/PartialUpdate",
            request,
            IngredientResponse,
        )

    async def retrieve(self, *, name: str = "") -> IngredientResponse:
        request = IngredientRetrieveRequest()
        request.name = name

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/Retrieve",
            request,
            IngredientResponse,
        )

    async def update(self, *, name: str = "", price: int = 0) -> IngredientResponse:
        request = IngredientRequest()
        request.name = name
        request.price = price

        return await self._unary_unary(
            "/dofus_market.grpc_market.IngredientController/Update",
            request,
            IngredientResponse,
        )
